name: System Tests

on:
  pull_request:
    branches: [ "main" ]
    paths:
      - '**'
      - '!**.md'
      - '!**.png'
  push:
    branches: [ "main" ]
    paths:
      - '**'
      - '!**.md'
      - '!**.png'
  workflow_dispatch:

env:
  GOVER: 1.19

jobs:
  b2b-raw-traffic:
    name: B2B raw traffic test
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./test/systest/dp-b2b
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GOVER }}
      - name: Build otgen
        run: cd ../../.. && go get && go mod tidy && go build && sudo mv otgen /usr/local/bin/otgen
      - name: Setup testbed
        run:  make install network deploy && sleep 5
      - name: Test1 RUN with STDIN YAML
        run:  cat otg.yml | otgen --log debug run -k
      - name: Test2 RUN with --api
        run:  cat otg.yml | otgen --log debug run -k --api https://127.0.0.1:8443
      - name: Test3 RUN with --file --yaml
        run:  otgen --log debug run -k --file otg.yml --yaml
      - name: Test4 RUN with --interval
        run:  otgen --log debug run -k --file otg.yml --interval 2s
      - name: Test5 RUN with --metrics flow
        run:  otgen --log debug run -k --file otg.yml --metrics flow
      - name: Test6 RUN with --xeta 1.5
        run:  otgen --log debug run -k --file otg.yml --xeta 1.5
      - name: Cleanup
        run:  make clean
  dut-arp-bgp-traffic:
    name: DUT ARP BGP and traffic test
    runs-on: ubuntu-22.04
    env:
      OTG_LOCATION_P1: "localhost:5555+localhost:50071"
      OTG_LOCATION_P2: "localhost:5556+localhost:50072"
    defaults:
      run:
        working-directory: ./test/systest/cpdp-frr
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GOVER }}
      - name: Build otgen
        run: cd ../../.. && make get build && sudo mv otgen /usr/local/bin/otgen
      - name: Setup testbed
        run:  make install deploy && sleep 5
      - name: Test1 CREATE --dmac auto | RUN
        run:  otgen create device -n otg1 -p p1 --ip 192.0.2.1 --gw 192.0.2.2 --prefix 30 | otgen add device -n otg2 -p p2 --ip 192.0.2.5 --gw 192.0.2.6 --prefix 30 | otgen --log debug add flow --tx otg1 --rx otg2 --dmac auto --src 192.0.2.1 --dst 192.0.2.5 | otgen --log debug run -k --metrics flow,port
      - name: Test2 RUN --rxbgp 2x
        run:  otgen --log debug run -k --file otg.json --json --rxbgp 2x
      - name: Test3 RUN --rxbgp 2x --metrics bgp4
        run:  otgen --log debug run -k --file otg.json --json --rxbgp 2x --metrics bgp4
      - name: Test4 RUN --rxbgp 2x --metrics bgp4,port
        run:  otgen --log debug run -k --file otg.json --json --rxbgp 2x --metrics bgp4,port
      - name: Test5 RUN --rxbgp 2x --metrics bgp4,flow
        run:  otgen --log debug run -k --file otg.json --json --rxbgp 2x --metrics bgp4,flow
      - name: Test6 RUN --rxbgp 2x --metrics bgp4,flow,port
        run:  otgen --log debug run -k --file otg.json --json --rxbgp 2x --metrics bgp4,flow,port
      - name: Test7 RUN --rxbgp 2x --metrics flow,port
        run:  otgen --log debug run -k --file otg.json --json --rxbgp 2x --metrics flow,port
      - name: Test8 CREATE --dmac auto | ADD BGP | RUN --rxbgp 2x --metrics bgp4,flow
        run:  otgen create device -n otg1 -p p1 --ip 192.0.2.1 --gw 192.0.2.2 --prefix 30 | otgen add bgp -d otg1 --id 1.1.1.1 --asn 1111 --peer 192.0.2.2 --route 198.51.100.0/24 | otgen add device -n otg2 -p p2 --ip 192.0.2.5 --gw 192.0.2.6 --prefix 30 | otgen add bgp -d otg2 --id 2.2.2.2 --asn 2222 --peer 192.0.2.6 --route 203.0.113.0/24 | otgen add flow --tx otg1 --rx otg2 --dmac auto --src 198.51.100.1 --dst 203.0.113.1 | otgen --log debug run -k --rxbgp 2x --metrics bgp4,flow
      - name: Cleanup
        run:  make clean
